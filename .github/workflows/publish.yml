name: Publish

on:
  push:
    tags:
      - '**'

jobs:
  build-n-publish:
    name: Build and publish plugin ðŸ“¦ to JetBrains merket
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:

     - uses: actions/checkout@v2
     - name: Setup Python
       uses: actions/setup-python@v1
       with:
         python-version: '3.8'
         architecture: 'x64'

     - uses: actions/cache@v1
       with:
         path: ~/.cache/pip
         key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
     - name: Install dependencies
       run: |
         pip install -r requirements.txt
     - run: |
         python scripts/build_changelog.py
         echo ::set-env name=CHANGELOG_LATEST::$(cat docs/changelog_latest.md)

     - name: Cache
       uses: actions/cache@v1.1.2
       with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
     - name: Set up JDK 1.8
       uses: actions/setup-java@v1
       with:
        java-version: 1.8
     - name: test 
       run: ./gradlew buildPlugin test jacocoTestReport
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         body: "${{ env.CHANGELOG_LATEST }}"
         draft: false
         prerelease: false
     - name: Upload Release Asset
       id: upload-release-asset 
       uses: actions/upload-release-asset@v1
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/poetry-pycharm-plugin.zip
          asset_name: poetry-pycharm-plugin.zip
          asset_content_type: application/zip
    # TODO
    # - name: Publish a plugin
    #   run: |
    #     curl --fail --header "Authorization: Bearer ${{secrets.JETBRAINS_TOKEN}}" \ 
    #           -F pluginId= -F file=@build/distributions/poetry-pycharm-plugin.zip \
    #            https://plugins.jetbrains.com/plugin/uploadPlugin'
